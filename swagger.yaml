openapi: 3.0.1

info:
  title: sweepstakes REST API
  version: 1.0.0

servers:
  - url: /api/

tags:
  - name: security
    description: login/logout area
  - name: app
    description: Init data for app
  - name: prize
    description: Prizes for users

paths:
  /security/login:
    post:
      tags: [security]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        204:
          description: successfull operation
        400:
          $ref: '#/components/responses/400BadRequest'

  /security/logout:
    post:
      tags: [security]
      responses:
        204:
          description: successfull operation
        400:
          $ref: '#/components/responses/400BadRequest'

  /app:
    get:
      tags: [app]
      description: needing information about app
      responses:
        200:
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'

  /prizes:
    get:
      tags: [prize]
      responses:
        200:
          description: successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prize'
        401:
          $ref: '#/components/responses/401Unauthorized'
    post:
      tags: [prize]
      description: generate user prize.
      responses:
        201:
          description: prize has been generated
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'

components:
  schemas:
    AppConfig:
      type: object
      properties:
        user:
          type: object
          nullable: true
          properties:
            id:
              type: integer
              format: int32
              nullable: true
            username:
              type: string
            email:
              type: string
        prizes_are_available:
          type: boolean
    Prize:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
        type:
          type: string
          enum:
            - money
            - rebait_point
            - product
        title:
          type: string
        description:
          type: string

  responses:
    400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              message:
                type: string
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      nullable: true
                    message:
                      type: string
                example:
                  - object_id: null
                    field: null
                    message: values shoud be unique
                  - object_id: null
                    field: name
                    message: This value should not be blank.
                  - object_id: null
                    field: name
                    message: This value is too short. It should have 3 characters or more.
                  - object_id: null
                    field: price
                    message: This value should be less than or equal to 99999999.99.
    401Unauthorized:
      description: User must be authorize for this action
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 401
              message:
                type: string
                example: Unauthorized
    403Forbidden:
      description: The client does not have access rights to the content
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 403
              message:
                type: string
                example: Forbidden
    404NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 404
              message:
                type: string
                example: Not found